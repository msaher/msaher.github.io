<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Saher&#39;s page</title>
    <link>https://msaher.github.io/</link>
    <description>Recent content on Saher&#39;s page</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 06 Jun 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://msaher.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>The Procedural Reality Beneath Object Oriented Programs</title>
      <link>https://msaher.github.io/writings/the-procedural-reality-beneath-object-oriented-programs/</link>
      <pubDate>Fri, 06 Jun 2025 00:00:00 +0000</pubDate>
      <guid>https://msaher.github.io/writings/the-procedural-reality-beneath-object-oriented-programs/</guid>
      <description>&lt;p&gt;Many software engineers are taught object-oriented programming (OOP) with little regard to what the machine is actually doing - a common failure of university curricula. This in turn creates an attitude where a mere programming paradigm is treated as a divine abstraction offered to us by the deities who bestow us with programming languages.&lt;/p&gt;&#xA;&lt;p&gt;I find that unacceptable. No abstraction is sacred. All object-oriented techniques can be mapped to procedural code with structs and function pointers. More engineers should be aware of this, and students, in particular, should not be shielded from this reality.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
