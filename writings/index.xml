<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Writings on Saher&#39;s page</title>
    <link>https://msaher.github.io/writings/</link>
    <description>Recent content in Writings on Saher&#39;s page</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 13 Oct 2025 15:49:06 +0300</lastBuildDate>
    <atom:link href="https://msaher.github.io/writings/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Why AI cannot be conscious</title>
      <link>https://msaher.github.io/writings/why-ai-cant-be-conscious/</link>
      <pubDate>Mon, 13 Oct 2025 15:49:06 +0300</pubDate>
      <guid>https://msaher.github.io/writings/why-ai-cant-be-conscious/</guid>
      <description>&lt;p&gt;This essay is based on a report I wrote for my writing class back at university. It&amp;rsquo;s even more relevant today in an age where investors genuinely think LLMs understand them and &lt;a href=&#34;https://www.technologyreview.com/2018/03/13/144721/a-startup-is-pitching-a-mind-uploading-service-that-is-100-percent-fatal/&#34;&gt;startups want to help upload your mind&lt;/a&gt;. Although no background in philosophy is needed, the writing style is more academic and assertive than usual because that&amp;rsquo;s what the course wanted from me so I apologize in advance (at least my instructor said it was the best paper :p)&lt;/p&gt;</description>
    </item>
    <item>
      <title>The Procedural Reality Beneath Object Oriented Programs</title>
      <link>https://msaher.github.io/writings/the-procedural-reality-beneath-object-oriented-programs/</link>
      <pubDate>Fri, 06 Jun 2025 00:00:00 +0000</pubDate>
      <guid>https://msaher.github.io/writings/the-procedural-reality-beneath-object-oriented-programs/</guid>
      <description>&lt;p&gt;Many software engineers are taught object-oriented programming (OOP) with little regard to what the machine is actually doing - a common failure of university curricula. This in turn creates an attitude where a mere programming paradigm is treated as a divine abstraction offered to us by the deities who bestow us with programming languages.&lt;/p&gt;&#xA;&lt;p&gt;I find that unacceptable. No abstraction is sacred. All object-oriented techniques can be mapped to procedural code with structs and function pointers. More engineers should be aware of this, and students, in particular, should not be shielded from this reality.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
